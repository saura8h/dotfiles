ll
rm .zsh_history
cd .zsh
ll
rm .zsh_history
ll
cd .zsh
ls
ll
cd
ll
sh-keygen -t rsa -b 4096 -C "saurab.mish@gmail.com"
ssh-keygen -t rsa -b 4096 -C "saurab.mish@gmail.com"
eval "$(ssh-agent -s)"
cd .ssh
ll
mvim config
cd
ssh-add -K ~/.ssh/id_rsa
pbcopy < ~/.ssh/id_rsa.pub
cd
ll
git config --global user.name "Saurabh Mishra"
ssh -T git@github.com
cd ~/Desktop/Web\ Back-end\ Engineering
ll
cd projects
ll
rm -rf microblog
git clone git@github.com:saura8h/microblog.git
git branch
ls
ll
cd microblog
ll
git branch
git branch foundations
git branch
git checkout foundations
git branch
git tag -a v0.1 -m "Foundations of test-driven development with Flask"
git config --global user.email "saurab.mish@gmail.com"
git config --global user.name "saura8h"
git tag -a v0.1 -m "Foundations of test-driven development with Flask"
git tag
git show v0.1
git tag
git push origin v0.1
git branch
git checkout -b master
git checkout master
git branch
git merge foundations
git branch -d foundations
git pull
git push origin master
pwd
ll
python3 
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
pip install flask pytest
pip install python-dotenv
pip freeze > requirements.txt
cat requirements.txt
ll
mvim README.md
git status
git add requirements.txt
git commit -m "added packages to flat file"
git add README.md
git commit -m "brief description"
git pull
git push
git push origin --delete v0.1
cat .gitignore
cd
cd .vim
ll
mvim gvimrc
cd ~/Desktop/Web\ Back-end\ Engineering
cd projects
git status
cd microblog
git status
git add README.md
commit -m "updated description"
git push
git commit -m "updated description"
git push
git add README.md
git commit -m "updated description"
git push
git add README.md
git commit -m "updated description"
git push
ll
pytest
cat .flaskenv
flask run
cat .flaskenv
pytest
flask run
brew cask install vscode
brew cask install visual-studio-code
python -m pytest
git status
git add README.md
git commit -m "updated description"
git push
git add README.md
git commit -m "updated description"
git push
git add README.md
git commit -m "testing md"
git push
git add README.md
git commit -m "updated READEM.md"
git push
git add README.md
git commit -m "updated README.md"
git push
git commit --amend
git push --force
git branch
git tag -a v0.1 -m "Flask API pytest"
git tag -d v0.1
git tag -a v0.1 -m "Flask API pytest"
git push origin v0.1
git tag -d v0.1
git status
git add app/__init__.py
git commit -m "app package"
git add app/routes.py
git commit -m "returns API response"
git add microblog.py
git commit -m "application entry-point"
git status
git add tests/conftest.py
git commit -m "fixture declarations for test suites"
git push
git push origin -d v0.1
git tag -d v0.1
git branch
git tag -a v0.1 -m "Flask API pytest"
git push origin v0.1
pip install flask-sqlalchemy
pip install flask-migrate
mvim ~/.zshenv
cd Desktop/Machine
mkdir CNN
cd CNN
youtube-dl -i PLkDaE6sCZn6Gl29AoE31iwdVwSG-KnDzF
brew install youtube-dl
cd Desktop
ll
mkdir Machine Learning
ll
rm -rf Learning
cd Machine
youtube-dl -i PLLssT5z_DsK-h9vYZkQkYNWcItqhlRJLN
cd Neural\ Networks\ and\ Deep\ Learning
youtube-dl -i PLkDaE6sCZn6Ec-XTbcX1uRg2_u4xOEky0
cd ..
mkdir Structuring
cd Structuring
youtube-dl -i PLkDaE6sCZn6E7jZ9sN_xHwSHOdjUxUW_b
cd ..
ll
mkdir Improving
cd Improving
youtube-dl -i PLkDaE6sCZn6Hn0vK8co82zjQtt3T2Nkqc
ll
cd .zsh
ll
mvim .zshrc
cd Desktop
cd Machine
mkdir Sequence
cd Sequence
youtube-dl -i PLkDaE6sCZn6F6wUI9tvS_Gw1vaFAx6rd6
cd
cd Desktop/Advanced\ Algorithms/dynamic-programming
ll
python longest_palindrome_sequence.py
ll
python3 longest_palindrome_sequence.py
python3
python3 longest_palindrome_sequence.py
python3 longest_palindrome_sequence.py
python3 longest_palindrome_sequence.py
cd ..
cd ..
ll
cd CPSC\ 535
ll
mkdir projects
cd projects
ll
git clone git@github.com:CSUF-CPSC-335-Bein-SP20/choosing-hash-fct-maziar-saurabh-1.git
ll
mv choosing-hash-fct-maziar-saurabh-1 hashing
ll
cd hashing
ll
cd ..
ll
ll
git clone git@github.com:CSUF-CPSC-335-Bein-SP20/graduation-time-maziar-saurabh.git
ll
mv graduation-time-maziar-saurabh topological_sort
ll
cd ~/Downloads/AWS
youtube-dl https://www.youtube.com/watch?v=Ia-UEYYR44s
youtube-dl https://www.youtube.com/watch?v=Ia-UEYYR44s
noglob youtube-dl https://www.youtube.com/watch?v=Ia-UEYYR44s
cat .zshenv
ll
cat .gitconfig
cd .vim
ll
cat gvimrc
cd ..
rm .viminfo
ll
mkdir dotfiles
cd dotfiles
mvim .pythonrc
cd ..
mvim .zshenv
cd .zsh
ll
mvim .zshrc
cd
ll
rm .python_history
ll
python3
ll
rm .python_history
ll
rm .viminfo
ll
ll
ll
mv .vscode .config
cd .config
ll
cd .zsh
ll
mvim .zshrc
code
cd
ll
ll
rm .vscode
rm -rf .vscode
ll
code
ll
cd .config/.zsh
ll
mvim .zshrc
cd
code --user-data-dir ~/.config/.vscode --extensions-dir ~/.config/.vscode
ll
rm -rf .vscode
ll
code --user-data-dir ~/.config/.vscode --extensions-dir ~/.config/.vscode
ll
cd .vscode
ll
cd ..
ll
rm -rf .vscode
cd .config
ll
mv .vscode vscode
ll
cd
ll
ll
code --user-data-dir ~/.config/vscode --extensions-dir ~/.config/vscode
ll
rm -rf .vscode
cd .config/.zsh
ll
mvim .zshrc
echo $VSCODE_EXTENSIONS
ll
code --user-data-dir ~/.config/vscode --extensions-dir ~/.config/vscode
ll
ll
cd .vscode
ll
cat argv.json
ll
git --version
ll
ll
ll
ll
brew uninstall visual-studio-code
brew cask uninstall visual-studio-code
cd .config/zsh
ll
mvim .zshrc
ll
pwd
ll
cd .config/zsh/
mvim .zshrc
pwd
cd .config/zsh
ll
mvim .zshrc
pwd
ll
ll
ll
cd .config/zsh
mvim .zshrc
cd .config/zsh
mvim .zshrc
ll
cd Documents
ls -la
ls -la
cd .config
ll
cd zsh
mvim .zshrc
echo $LSCOLORS
echo $LSCOLORS
ll
cd ~/Music
ll
cd -
pwd
cd .config/zsh
mvim .zshrc
cd Music
ll
cd ~/.config/zsh
mvim .zshrc
ll
cd Music
ll
echo $LSCOLORS
cd ~/.config/zsh
mvim .zshrc
ll
cd Music
ll
cd ~/.config/zsh
mvim .zshrc
ll
cd Music
ll
cd ~/.config/zsh
mvim .zshrc
ll
cd Music
ll
ls -l
ls -la
=
echo $PS1
ll
cd 
ll
cd -
ll
cd -
echo $PS1
cd
cd .config/zsh
ll
mvim .zshrc
echo $PS1
ll
ll
ll
ll
echo "$(tput setaf 166) This is orange"
echo "This is orange\
"
echo "$fg[orange] This is orange"
ll
echo $PS1
cd Documents
%n
echo %n
echo "%n"
echo "$%n"
echo $"%n"
PROMPT='%F{240}%n%F{red}@%F{green}%m:%F{141}%d$ %F{reset}'
PS1='%(?.%F{green}.%F{red})%n@%m:%~%# %f'
ll
PS1='%(?.%F{green}.%F{green})%n@%m:%~%# %f'
ll
ls -la
cd Downloads
ls -la
cd ~/Music
ll
export PS1="%n@%m %1~ %#"\

export PS1='%(?.%F{green}.%F{green})%n@%m %1~ %# %f'\

export PS1='%(?.%F{green}.%F{green})%n@%m %1~ %#'
ll
export PS1='%(?.%F{green}.%F{green})%n@%m %1~ %# '
ls -la
export PS1='%(?.%F{green}.%F{green})%n@%m %1~ %# %f'
ll
ls -la
echo $PS1
export PS1='%(?.%F{green}.%F{green})%n@%m %1~ %# %f'\

ls -la
ll
ls -la
ls -la
ll
cat .zshenv
cd .config/zsh
ll
mv .zshrc zshrc
ll
ll
cd .config/zsh
ll
ls
mv zshrc .zshrc
ll
cat ~/.config/zsh/.zshrc
cd Downloads
export PS1='%(?.%F{green}.%F{blue})%n@%m %1~ %# %f'
PS1='%(?.%F{green}.%F{blue})%n@%m %1~ %# %f'
PS1='%(?.%F{blue}.%F{blue})%n@%m %1~ %# %f'
PS1='%(?.%F{blue}.%F{green})%n@%m %1~ %# %f'
ll
cd Desktop/Advanced\ Algorithms
ll
youtube-dl https://www.youtube.com/watch?v=09_LlHjoEiY
mkdir Abdul\ Bari
ll
cd Abdul\ Bari
ll
youtube-dl -i PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O
cd Desktop/
ll
brew cask search peazip
brew search peazip
brew search zip
brew search unarchiver
brew cask install the-unarchiver
ll
cd .aws
ll
cd ..
rm -rf .aws
docker run --rm -it -v ~/.config/aws:/root/.aws -v $(pwd):/aws amazon/aws-cli\

ll
cd .config
ll
cd aws
ll
cd ../zsh
ll
mvim .zshrc
mvim .zshrc
cat .zshrc
cd
aws --version
cd -
ll
source .zshrc
aws --version
cd
aws --version
aws configure sso
aws configure sso
ll
cd .config
ll
cd aws
mvim config
AWS_HOME
echo $AWS_HOME
echo $AWS_CONFIG_FILE
ll
pwd
cd ..
cd
ll
cd .config
cd zsh
mvim .zshrc
cd ../aws
ll
cd ../zsh
source .zshrc
mvim .zshrc
source .zshrc
echo $AWS_HOME
echo $AWS_CONFIG_FILE
brew cask install docker
docker --version
docker --version
docker run --rm -it amazon/aws-cli --version
docker run --rm -it amazon/aws-cli --version
docker run --rm -it amazon/aws-cli create-elasticsearch-domain
docker run --rm -it -v ~/.aws:/root/.aws -v $(pwd):/aws amazon/aws-cli
aws configure sso
aws configure sso
cd ~/Desktop/AWS/Files
ll
curl -XPOST -u esdemouser:E$demopass123 https://search-esdemo-623mnplmxlu5hcort4crxei4le.us-east-2.es.amazonaws.com/_bulk --data-binary @bulk_movies.json -H 'Content-Type: application/json'
cd ~/.config/aws
ll
cd sso
ll
cd cache
ll
cd
ll
cd .docker
ll
cd application-template
ll
cd logs
ll
cat com.docker.log
cd ../
ll
cd ..
ll
cat config.json
cat daemon.json
echo $DOCKER_CONFIG
cd /etc/
ll
cd
find . -type l -ls
cd .docker
cd ../.config
ll
cd zsh
ll
mvim .zshrc
cd ..
ll
mkdir docker
cd
source ~/.config/zsh/.zshrc
cd -
cd zsh
mvim .zshrc
source .zshrc
cd
ll
cd .config
ll
cd docker
ll
ll
cd ~/.docker
ll
mv config.json ~/.config/docker
mv daemon.json ~/.config/docker
mv application-template ~/.config/docker
ll
cd ..
rm -rf .docker
cd .config
ll
echo $DOCKER_CONFIG
echo $HOME
ll
cd
ll
cd .docker
ll
cd
rm -rf .docker
docker build
ll
cd .config/zsh
ll
mvim .zshrc
docker status
source .zshrc
echo $DOCKER_CONFIG
cd
ll
ll
ll
rm -rf .docker
ll
export DOCKER_CONFIG=${HOME}/.config/docker/
ll
rm -rf .docker
source ~/.config/zsh/.zshrc
ll
echo $DOCKER_CONFIG
echo $XDG_DATA_HOME
cd .config/docker
ll
cat config.json
cat daemon.json
cd 
rm -rf .docker
source ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
ll
cd .config/docker
ll
rm -rf application-template
car daemon.json
cat daemon.json
ll
cd
ll
rm -rf .docker
ll
source ~/.config/zsh/.zshrc
ll
rm -rf .docker
ll
source ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
cd
ll
ll
rm -rf .docker
ll
mvim .zshenv
ll
echo export DOCKER_CONFIG=$HOME/.config/docker > ~/.config/zsh/.zshrc
cat ~/.config/zsh/.zshrc
cd .config
ll
cd vim
ll
cd tmp
ll
cd backup
ll
cd ../swap
ll
cat %Users%saurabh%.config%zsh%.zshrc.swp
cd ..
ll
cd undo
ll
cd ..
cd ..
ll
mvim gvimrc
source ll
ll
cd ..
ll
cd zsh
source .zshrc
cd
ll
ll
cd .config
ll
cd aws
ll
cd
ll
rm -rf .docker
ll
ll
cd .config
l
ll
cat pythonrc
cd
ll
ll
cd .config
ll
cat pythonrc
mvim pythonrc
ll
python3
ll
python3
ll
ll
cd .config
ll
cd git
ll
cat config
cd ..
ll
cd zsh
mvim .zshrc
cd ..
ll
mkdir emacs.d
ll
mv ~/Downloads/init.el ~/.config/emacs.d
cd emacs.d
ll
ll
mvim init.el
brew cask install emacs
ll
ll
cat .config/vim/gvimrc
ll
cd .config/vim
ll
cat gvimrc
ll
rm .viminfo
ll
rm -rf .emacs.d
cd .config
cd .em
cd emacs.d
ll
mvim init.el
cd
ll
ll
ll
cd .config
cd emacs.d
mvim init.el
echo $EMACS_USER_DIR
cd ../zsh
mvim .zshrc
cd
ll
rm -rf .emacs.d
source ~/.config/zsh/.zshrc
ll
cat ~/.config/zsh/.zshrc
mvim .config/vim/gvimrc
ll
cat .zshenv
rm -rf .emacs.d
rm .viminfo
mvim .config/vim/gvimrc
cd
ll
mvim .config/zsh/.zshrc
source .config/zsh/.zshrc
ll
emacs --version
ll
